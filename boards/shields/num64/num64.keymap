/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define FUNCTION 1
#define NUMBER 2
#define SETTINGS 3
#define FN 4

/ {

keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp TAB       &kp Q      &kp W      &kp E               &kp R      &kp T   &kp Y      &kp  U               &kp I           &kp O     &kp P       &kp NUBS              &kp KP_N7  &kp KP_N8  &kp KP_N9
                &kp LCTRL     &kp A      &kp S      &kp D               &kp F      &kp G   &kp H      &kp  J               &kp K           &kp L     &kp SEMI    &kp SQT               &kp KP_N4  &kp KP_N5  &kp KP_N6
                &kp LSHIFT    &kp Z      &kp X      &kp C               &kp V      &kp B   &kp N      &kp  M               &kp COMMA       &kp DOT   &kp FSLH    &kp RSHIFT  &kp UP    &kp KP_N1  &kp KP_N2  &kp KP_N3
                              &kp LWIN   &kp LALT   &lt NUMBER MINUS    &kp BSPC           &kp SPACE  &lt FUNCTION ENTER   &lt FN EQUAL    &kp RALT  &kp K_APP   &kp RIGHT   &kp DOWN  &kp LEFT   &kp KP_N0  &kp KP_ENTER
            >;
         };
        function_layer {
            bindings = <
                &kp ESC            &none      &kp HOME   &kp UP           &kp END      &kp PSCRN  &kp PAUSE_BREAK   &kp  PG_UP          &kp UP       &kp PG_DN  &kp C_BRI_UP  &kp DEL                   &kp KP_NUM     &none            &kp KP_PLUS
                &lt SETTINGS LCTRL &none      &kp LEFT   &kp DOWN         &kp RIGHT    &kp LC(F)  &none             &kp  LEFT           &kp DOWN     &kp RIGHT  &kp C_BRI_DN  &kp LG(L)                 &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp KP_MINUS
                &kp LSHIFT         &none      &kp LC(X)  &kp LC(C)        &kp LC(V)    &kp INS    &kp INS           &none               &none        &none      &none         &kp RSHIFT  &kp C_VOL_UP  &none          &none            &none
                                   &kp LWIN   &kp LALT   &lt NUMBER LBKT  &kp BSPC                &kp SPACE         &lt FUNCTION ENTER  &lt FN RBKT  &kp RALT   &kp K_APP     &kp C_MUTE  &kp C_VOL_DN  &kp C_PP       &kp KP_DOT       &kp KP_ENTER
            >;
         };
        number_layer {
            bindings = <
                &kp GRAVE     &kp EXCL   &kp AT     &kp HASH      &kp DOLLAR         &kp PERCENT    &kp CARET    &kp  AMPS            &kp ASTERISK     &kp LPAR   &kp RPAR   &kp DEL             &kp KP_N7  &kp KP_N8  &kp KP_N9
                &kp CAPS      &kp N1     &kp N2     &kp N3        &kp N4             &kp N5         &kp N6       &kp N7               &kp N8           &kp N9     &kp N0     &kp ENTER           &kp KP_N4  &kp KP_N5  &kp KP_N6
                &kp LSHIFT    &none      &none      &none         &none              &none          &none        &none                &kp COMMA        &kp DOT    &kp FSLH   &kp RSHIFT &kp UP   &kp KP_N1  &kp KP_N2  &kp KP_N3
                              &kp LWIN   &kp LALT   &kp MINUS     &kp BSPC                          &kp SPACE    &lt FUNCTION ENTER   &kp EQUAL        &kp RALT   &kp K_APP  &kp RIGHT  &kp DOWN &kp LEFT   &kp KP_N0  &kp KP_ENTER
            >;
         };
        settings_layer {
            bindings = <
                &rgb_ug RGB_TOG   &rgb_ug RGB_BRI   &rgb_ug RGB_SAI   &none   &bt BT_SEL 0      &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3         &bt BT_SEL 4   &bt BT_CLR      &none   &none                       &kp KP_N7   &kp KP_N8  &kp KP_N9
                &rgb_ug RGB_EFF   &rgb_ug RGB_BRD   &rgb_ug RGB_SAD   &none   &bt BT_DISC 0     &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3        &bt BT_DISC 4  &bt BT_CLR_ALL  &none   &out OUT_TOG                &kp KP_N4   &kp KP_N5  &kp KP_N6
                &rgb_ug RGB_OFF   &rgb_ug RGB_SPI   &rgb_ug RGB_HUI   &none   &none             &none          &none          &none                &none          &none           &none   &none       &rgb_ug RGB_BRI &kp KP_N1   &kp KP_N2  &kp KP_N3
                                  &rgb_ug RGB_SPI   &rgb_ug RGB_HUD   &none   &kp BSPC                         &kp SPACE      &lt FUNCTION ENTER   &none          &none           &none   &bt BT_PRV  &rgb_ug RGB_BRD &bt BT_NXT  &kp KP_N0  &kp KP_ENTER
            >;
         };
        fn_layer {
            bindings = <
                &kp F1        &kp F2     &kp F3     &kp F4               &kp F5               &kp F6            &kp F7             &kp  F8              &kp F9     &kp F10   &kp F11   &kp F12             &kp KP_N7  &kp KP_N8  &kp KP_N9
                &kp LCTRL     &kp F13    &kp F14    &kp F15              &kp F16              &kp F17           &kp F18            &kp F19              &kp F20    &kp F21   &kp F22   &none               &kp KP_N4  &kp KP_N5  &kp KP_N6
                &kp LSHIFT    &none      &none      &none                &none                &none             &none              &none                &none      &none     &none     &kp RSHIFT &kp UP   &kp KP_N1  &kp KP_N2  &kp KP_N3
                              &kp LWIN   &kp LALT   &lt NUMBER LBKT      &kp BSPC                               &kp SPACE          &lt FUNCTION ENTER   &kp RBKT   &kp RALT  &kp K_APP &kp RIGHT  &kp DOWN &kp LEFT   &kp KP_N0  &kp KP_ENTER
            >;
         };
    };
};
